{"version":3,"file":"static/js/310.4e689538.chunk.js","mappings":"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","sources":["common/API.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport NoImg from './no_data.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'e7dc56c25ee332beb552e37e9144086f',\n};\n\nexport async function getTrendingMovies() {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n}\n\nexport async function getSearchMovie(movieName) {\n  const response = await axios.get(`/search/movie`, {\n    params: { query: movieName },\n  });\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n}\n\nexport function getRightImg(partOfPath) {\n  return partOfPath\n    ? `https://image.tmdb.org/t/p/original${partOfPath}`\n    : NoImg;\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding: 3px 10px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\n\nimport { pathTo } from 'common/pathes';\nimport { Item } from './MovieList.styled';\n\nexport const MovieList = ({ movies, isFromHome }) => {\n  const location = useLocation();\n\n  function getPath(movieId) {\n    const path = isFromHome ? `${pathTo.MOVIES}/${movieId}` : `${movieId}`;\n    return path;\n  }\n  getPath();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <Item key={id}>\n          <Link to={getPath(id)} state={{ from: location }}>\n            {title}\n          </Link>\n        </Item>\n      ))}\n    </ul>\n  );\n};\n","const { default: styled } = require('styled-components');\n\nexport const Message = styled.div`\n  padding: 30px;\n  font-size: 36px;\n`;\n\nexport const StyledInput = styled.input`\n  padding: 3px;\n  margin-right: 10px;\n`;\n\nexport const StyledButton = styled.button`\n  padding: 3px 5px;\n  cursor: pointer;\n  :hover {\n    color: white;\n    background-color: darkblue;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { getSearchMovie } from 'common/API';\n\nimport { StyledInput, Message, StyledButton } from './Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoadind, setIsLoading] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n\n    async function searchMovie(searchValue) {\n      try {\n        setIsLoading(true);\n        setIsEmpty(false);\n        setError(null);\n\n        const fethedMovies = await getSearchMovie(searchValue);\n        if (fethedMovies.length) {\n          setMovies(fethedMovies);\n        } else setIsEmpty(true);\n      } catch (err) {\n        const errText = err.response.data.status_message;\n        setError(errText);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    if (currentQuery) {\n      searchMovie(currentQuery);\n    }\n    if (query) {\n      searchMovie(query);\n    }\n  }, [query, searchParams]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const value = e.target.search.value;\n\n    setSearchParams({ query: value });\n    setQuery(value);\n    setInputValue('');\n    setError(null);\n  };\n\n  const onChange = e => {\n    const value = e.target.value;\n    setInputValue(value);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <StyledInput name=\"search\" value={inputValue} onChange={onChange} />\n      <StyledButton type=\"submit\">Search</StyledButton>\n      {error && <Message>{error}</Message>}\n      {isEmpty && <Message>found nothing</Message>}\n\n      {isLoadind && <Message>Loading...</Message>}\n      {!isEmpty && movies && <MovieList movies={movies} isFromHome={false} />}\n    </form>\n  );\n};\n\nexport default Movies;\n"],"names":["getTrendingMovies","axios","response","data","results","getSearchMovie","movieName","params","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","getRightImg","partOfPath","NoImg","api_key","Item","styled","MovieList","movies","isFromHome","location","useLocation","getPath","pathTo","map","id","title","to","state","from","require","default","Message","div","StyledInput","input","StyledButton","button","useState","setQuery","inputValue","setInputValue","setMovies","error","setError","isLoadind","setIsLoading","isEmpty","setIsEmpty","useSearchParams","searchParams","setSearchParams","useEffect","currentQuery","get","searchMovie","searchValue","fethedMovies","length","errText","status_message","onSubmit","e","preventDefault","value","target","search","name","onChange","type"],"sourceRoot":""}